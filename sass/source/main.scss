@use './config/reset.scss';
@use './config/variaveis.scss';
@use 'sass:math';

@mixin elementoForm($margin: 16px) {
    padding: 8px;
    display: block;
    width: 100%;
    margin-bottom: $margin;
}

@function pixelParaEm($alvoPixel, $contextoPixel: 16px) {
    @return math.div($alvoPixel, $contextoPixel) + em;
} 

body {
    background-color: #eee;
}

header {
    padding: 16px 0;
    background-color: variaveis.$corPrincipal;
    text-align: center;
    color: #fff;
}

.container {
    max-width: 1024px;
    margin: 0 auto;
    width: 100%;
}

.formContainer {
    height: calc(100vh - 70px);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    max-width: 760px;

    h2 {
        font-size: pixelParaEm(48px);
        text-align: center;
    }

    form {
        max-width: 480px;
        width: 100%;
        margin-top: 40px;

        label {
            font-weight: bold;
            cursor: pointer;
        }
        
        input {
            @include elementoForm();
            background-color: transparent;
            border: none;
            border-bottom: 3px solid variaveis.$corPrincipal;
        }

        button {
            @include elementoForm();
            background-color: variaveis.$corSecundaria;
            font-size: 18px;
            color: #fff;
            font-weight: bold;
            border: none;
            cursor: pointer;

            &:hover {
                background-color: lighten(variaveis.$corSecundaria, 10%);
            }
        }
    }
}

@media screen and (max-width: variaveis.$mobile) {
    // pixel para unidade correta em (medida alvo / medida atual do contexto)
    .container {
        max-width: 80%;
    }
}